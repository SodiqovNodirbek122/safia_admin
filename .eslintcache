[{"/home/doni/projects/dashboard/src/App.js":"1","/home/doni/projects/dashboard/src/reportWebVitals.js":"2","/home/doni/projects/dashboard/src/index.js":"3","/home/doni/projects/dashboard/src/components/preloader/preloader.js":"4","/home/doni/projects/dashboard/src/pages/Home/Home.js":"5","/home/doni/projects/dashboard/src/layouts/MainLayout.js":"6","/home/doni/projects/dashboard/src/routes/routes.js":"7","/home/doni/projects/dashboard/src/pages/Contact/Contact.js":"8"},{"size":622,"mtime":1611828980836,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611821977424,"results":"11","hashOfConfig":"10"},{"size":500,"mtime":1611821977424,"results":"12","hashOfConfig":"10"},{"size":227,"mtime":1611828760829,"results":"13","hashOfConfig":"10"},{"size":92,"mtime":1611828266895,"results":"14","hashOfConfig":"10"},{"size":1748,"mtime":1611829099823,"results":"15","hashOfConfig":"10"},{"size":1150,"mtime":1611829824609,"results":"16","hashOfConfig":"10"},{"size":194,"mtime":1611829893387,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ak8fmr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/doni/projects/dashboard/src/App.js",["36"],"/home/doni/projects/dashboard/src/reportWebVitals.js",[],"/home/doni/projects/dashboard/src/index.js",[],["37","38"],"/home/doni/projects/dashboard/src/components/preloader/preloader.js",[],"/home/doni/projects/dashboard/src/pages/Home/Home.js",[],"/home/doni/projects/dashboard/src/layouts/MainLayout.js",[],"/home/doni/projects/dashboard/src/routes/routes.js",["39"],"import React from 'react'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport { lazy } from 'react'\n\nconst MainLayout = lazy(() => import('../layouts/MainLayout'))\nconst Home = lazy(() => import('../pages/Home/Home'))\nconst Contact = lazy(() => import('../pages/Contact/Contact'))\n\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n)\n\nconst Routes = () => {\n  const publicRoutes = [\n    {\n      path: '/',\n      exact: true,\n      layout: MainLayout,\n      component: Home,\n    },\n    {\n      path: '/contact/:id',\n      exact: true,\n      layout: MainLayout,\n      component: Contact,\n    },\n  ]\n\n  const publicRouteList = publicRoutes.map((item, id) => {\n    return (\n      <AppRoute\n        key={id}\n        exact\n        path={item.path}\n        layout={item.layout}\n        component={item.component}\n      />\n    )\n  })\n\n  return (\n    <Switch>\n      {publicRouteList}\n      {/* <Redirect from='*' to='/404' /> */}\n    </Switch>\n  )\n}\n\nexport default withRouter(Routes)\n","/home/doni/projects/dashboard/src/pages/Contact/Contact.js",[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"40","severity":1,"message":"48","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]